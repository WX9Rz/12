Дополнительно для упрощения жизни (но вы должны знать что вы делаете):
#эти действия подставят нужные значения в команды.
1. curl -L https://raw.githubusercontent.com/WX9Rz/12/refs/heads/main/33 -o /root/33
2. подставляете значения под ваш вариант в "vim /root/33";
3. grep -v '^#' 33 > 33_clean && sed -f 33_clean 3 > 0    #подменит все переменные
4. cat 0
5. Получаете готовые команды, с уже подставленными IP и прочим.


# команды для подключения по ssh с CLI. Это не требуется по заданию!
HQ-SRV   ssh sshuser@{HQ_SRV_IP} -p 2024
HQ-RTR   ssh sshuser@{HQ_RTR_VLAN_200_IP} -p 2024
BR-SRV   ssh sshuser@{HQ_SRV_IP} -p 2024
BR-RTR   ssh sshuser@{BR_RTR_TO_ISP_IP} -p 2024
ISP      ssh sshuser@{ISP_TO_HQ_IP} -p 2024

RTR
sudo useradd -m -s /bin/bash net_admin - создать нового пользователя, если не получается войти
sudo passwd net_admin - создать нового пользователя, если не получается войти
sudo passwd root - сменить пароль sudo на RTR


#далее все по заданию
#######################################################
### HQ-RTR (Главный маршрутизатор) ###
#######################################################

# --- Настройка IPsec-туннеля ---
apt update && apt install strongswan libcharon-extra-plugins -y

nano /etc/ipsec.sh
#Вставить содержимое:
ip link add vti0 type vti local {HQ_RTR_TO_ISP_IP} remote {BR_RTR_TO_ISP_IP} key 1
ip addr add {HQ_RTR_GRE_IP}/{HQ_RTR_GRE_MASK} dev vti0
ip link set vti0 up

chmod +x /etc/ipsec.sh

nano /etc/ipsec.conf
#Вставить содержимое:
conn tunnel
    leftupdown=/etc/ipsec.sh
    left={HQ_RTR_TO_ISP_IP}
    leftsubnet=0.0.0.0/0
    right={BR_RTR_TO_ISP_IP}
    rightsubnet=0.0.0.0/0
    authby=secret
    keyexchange=ikev2
    auto=start
    mark=1
    type=tunnel
    esp=aes256-sha256-modp1024

nano /etc/ipsec.secrets
#Добавить строку: 
{HQ_RTR_TO_ISP_IP} {BR_RTR_TO_ISP_IP} : PSK "{PSK}"

nano /etc/strongswan.d/charon.conf
#Изменить строку на: 
install_routes = no

# Удаление старого GRE-туннеля
nano /etc/network/interfaces
# Удалить блок gre1 #

# потом вводим:
ip tunnel del gre1
vtysh
conf t
no interface gre1
write
exit
exit
ipsec restart

ipsec restart


# --- Настройка межсетевого экрана ---
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -p tcp -m multiport --dports 22,53,80,443,2024 -j ACCEPT
iptables -A INPUT -i eth0 -p udp -m multiport --dports 53,123,500,4500 -j ACCEPT
iptables -A INPUT -i eth0 -p icmp -j ACCEPT
iptables -A INPUT -p esp -j ACCEPT
iptables -A FORWARD -p esp -j ACCEPT
iptables -A INPUT -i eth0 -m state --state NEW -j DROP
iptables -A OUTPUT -j ACCEPT
iptables-save > /root/rules
iptables -L -v


#######################################################
### BR-RTR (Второй маршрутизатор) ###
#######################################################

# --- Настройка IPsec-туннеля ---
apt update
apt install strongswan libcharon-extra-plugins -y

nano /etc/ipsec.sh
#Вставить содержимое:
ip link add vti0 type vti local {BR_RTR_TO_ISP_IP} remote {HQ_RTR_TO_ISP_IP} key 1
ip addr add {BR_RTR_GRE_IP}/{BR_RTR_GRE_MASK} dev vti0
ip link set vti0 up

chmod +x /etc/ipsec.sh

nano /etc/ipsec.conf
#Вставить содержимое:
conn tunnel
    leftupdown=/etc/ipsec.sh
    left={BR_RTR_TO_ISP_IP}
    leftsubnet=0.0.0.0/0
    right={HQ_RTR_TO_ISP_IP}
    rightsubnet=0.0.0.0/0
    authby=secret
    keyexchange=ikev2
    auto=start
    mark=1
    type=tunnel
    esp=aes256-sha256-modp1024

nano /etc/ipsec.secrets
#Добавить строку: 
{BR_RTR_TO_ISP_IP} {HQ_RTR_TO_ISP_IP} : PSK "{PSK}"

nano /etc/strongswan.d/charon.conf
#Изменить строку на: 
install_routes = no

# Удаление старого GRE-туннеля
nano /etc/network/interfaces
#Удалить всё, что относится к gre1

ip tunnel del gre1
vtysh
conf t
no interface gre1
end
write
exit

ipsec restart
ipsec status

# --- Настройка межсетевого экрана ---
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -p tcp -m multiport --dports 22,53,80,443,2024 -j ACCEPT
iptables -A INPUT -i eth0 -p udp -m multiport --dports 53,123,500,4500 -j ACCEPT
iptables -A INPUT -i eth0 -p icmp -j ACCEPT
iptables -A INPUT -p esp -j ACCEPT
iptables -A FORWARD -p esp -j ACCEPT
iptables -A INPUT -i eth0 -m state --state NEW -j DROP
iptables -A OUTPUT -j ACCEPT
iptables-save > /root/rules
iptables -L -v

#######################################################
### HQ-CLI на BR-SRV ###
#######################################################
ping {BR_SRV_IP} (успех)


#######################################################
### HQ-SRV (Сервер) ###
#######################################################

# --- Настройка CUPS ---
apt-get update && apt-get install cups cups-pdf -y
systemctl enable --now cups

nano /etc/cups/cupsd.conf
#Во всех блоках Location добавить строку: Allow all (с отступом)
systemctl restart cups


#######################################################
### HQ-CLI (Клиент печати) ###
#######################################################

# --- Настройка клиента печати ---
lpadmin -p CUPS -E -v ipp://hq-srv.au-team.irpo:631/printers/Cups-PDF -m everywhere
lpoptions -d CUPS
lpstat -p
lpadmin -x Cups-PDF
lpstat -p

#######################################################
### HQ-SRV (Сервер) ###
#######################################################

# --- Настройка Rsyslog сервера ---
apt-get update && apt-get install rsyslog -y
nano /etc/rsyslog.d/00_common.conf
    #Добавить содержимое куданибудь ближе к началу:
    module(load="imtcp")
    input(type="imtcp" port="514")

    #эти в самый конец:
    $template RemoteLogs,"/opt/%HOSTNAME%/rsyslog.txt"
    *.* ?RemoteLogs
    & stop

systemctl enable rsyslog
systemctl restart rsyslog

######################################
#### HQ-RTR и BR-RTR
######################################

# --- Настройка Rsyslog ---
nano /etc/rsyslog.conf
    закомментировать imuxsock
    раскоментить immark
    дописать туда же: module(load="imjournal")

    #добавить в конец: *.warning @@{HQ_SRV_IP}:514
    
systemctl restart rsyslog



#######################################################
### BR-SRV (Клиент) ###
#######################################################

# --- Настройка Rsyslog клиента ---
apt-get update && apt-get install rsyslog rsyslog-journal -y
nano /etc/rsyslog.d/00_common.conf
#раскомментрировать:
module(load="imjournal")
module(load="imklog")
module(load="immark")

#добавить в конец файла:
*.warning @@{HQ_SRV_IP}:514

systemctl enable rsyslog
systemctl restart rsyslog

# Тестирование логирования
logger -p user.info "Test info"
logger -p user.warning "Test warning"
logger -p user.error "Test error"

#######################################################
### HQ-SRV (Ansible сервер) ###
#######################################################
cat /opt/br-srv/rsyslog.txt

#######################################################
### HQ-SRV (Сервер) ###
#######################################################
# --- Настройка ротации логов ---
nano /etc/logrotate.d/rsyslog
#Добавить содержимое:
/opt/*/rsyslog.txt {
    weekly
    minsize 10M
    compress
    missingok
    notifempty
    create 0644 root root
    rotate 4
    dateext
}


#######################################################
### BR-SRV (Ansible сервер) ###
#######################################################

# --- Настройка резервного копирования ---
mkdir /etc/ansible/NETWORK_INFO
nano /etc/ansible/inventory.yml
---
- name: Инвентаризация машин HQ-SRV и HQ-CLI
  hosts:
	- hq-srv
	- hq-cli
  gather_facts: yes
  tasks:
	- name: Создать отчёт с информацией рабочем месте
  	delegate_to: localhost
  	copy:
    	dest: "/etc/ansible/PC_INFO/{{ ansible_hostname }}.yml"
    	content: |
      	---
      	Имя компьютера: "{{ ansible_hostname }}"
      	IP-адрес компьютера: "{{ ansible_default_ipv4.address }}"


#проверяем
ansible-playbook /etc/ansible/inventory.yml
ls -la /etc/ansible/PC_INFO
cat /etc/ansible/PC_INFO/hq-cli.yml
cat /etc/ansible/PC_INFO/hq-srv.yml


nano /etc/ansible/backup.yml
#Вставить содержимое:
---
- name: Резервное копирование конфигурации маршрутизаторов HQ-RTR и BR-RTR
  hosts:
  - HQ-RTR
  - BR-RTR
  gather_facts: no
  tasks:

    - name: Создание локальных папок для резервных копий
      ansible.builtin.file:
        path: "/etc/ansible/NETWORK_INFO/{{ inventory_hostname }}/{{ item }}"
        state: directory
      loop:
        - "frr"
      delegate_to: localhost

    - name: Копирование конфигурации FRR
      ansible.builtin.fetch:
        src: "/etc/frr/{{ item }}"
        dest: "/etc/ansible/NETWORK_INFO/{{ inventory_hostname }}/frr/"
        flat: yes
      loop:
        - "daemons"
        - "frr.conf"
        - "frr.conf.sav"
        - "vtysh.conf"
      become: yes

    - name: Копирование сохранённых правил iptables
      ansible.builtin.fetch:
        src: /etc/iptablesRules
        dest: "/etc/ansible/NETWORK_INFO/{{ inventory_hostname }}/iptablesRules"
        flat: yes
      become: yes

    - name: Копирование конфигурации сетевых интерфейсов
      ansible.builtin.fetch:
        src: /etc/network/interfaces
        dest: "/etc/ansible/NETWORK_INFO/{{ inventory_hostname }}/interfaces"
        flat: yes
      become: yes


#проверяем
ansible-playbook /etc/ansible/backup.yml
ls -la /etc/ansible/NETWORK_INFO
ls -la /etc/ansible/NETWORK_INFO/HQ-RTR
ls -la /etc/ansible/NETWORK_INFO/BR-RTR
cat /etc/ansible/NETWORK_INFO/HQ-RTR/interfaces

#######################################################
### Проверки ###
#######################################################

# Проверить туннель:
ipsec status

# Проверить iptables:
iptables -L -v

# Проверить логи:
ls -la /opt/*/rsyslog.txt
cat /opt/br-srv/rsyslog.txt

# Проверить принтер:
lpstat -p

# Проверить соединение:
ping {BR_SRV_IP} -c 4
